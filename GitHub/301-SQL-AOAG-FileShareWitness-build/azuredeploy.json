{  
   "$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
   "contentVersion":"1.0.0.0",
   "parameters":{  
      "vmName":{  
         "type":"string",
         "defaultValue":"",
         "minLength":3,
         "maxLength":13,
         "metadata":{  
            "description":"Name for the Virtual Machine. Name will be iterated for each VM starting at 1"
         }
      },
      "AvailabilitySet":{  
         "type":"string",
         "defaultValue":"",
         "minLength":3,
         "metadata":{  
            "description":"Name for the AvailabilitySet."
         }
      },
      "FailoverClusterName":{  
         "type":"string",
         "defaultValue":"",
         "minLength":3,
         "maxLength":13,
         "metadata":{  
            "description":"First 10 char for the netbios name of the FailoverCluster. Runbook will append 5 more to ensure its unique and total must be less than 15."
         }
      },
      "FileshareWitnessPath":{  
         "type":"string",
         "defaultValue":"",
         "minLength":3,
         "metadata":{  
            "description":"Specify the file witness share, create a azure VM and use that VM for File share witness path"
         }
      },
      "AOAGListenerName":{  
         "type":"string",
         "defaultValue":"",
         "minLength":3,
         "maxLength":13,
         "metadata":{  
            "description":"AOAG Listener Name"
         }
      },
      "loadBalancerName":{  
         "type":"string",
         "defaultValue":"",
         "minLength":3,
         "maxLength":14,
         "metadata":{  
            "description":"Load Balancer Name"
         }
      },
      "numberOfInstances":{  
         "type":"int",
         "defaultValue":2,
         "minValue":2,
         "metadata":{  
            "Description":"Number of Azure VM to create."
         }
      },
      "localAdminUserName":{  
         "type":"string",
         "minLength":1,
         "metadata":{  
            "description":"Local Username for the Virtual Machine."
         }
      },
      "localAdminPassword":{  
         "type":"securestring",
         "minLength":1,
         "metadata":{  
            "description":"Local Password for the Virtual Machine."
         }
      },
      "domainJoinUserName":{  
         "type":"string",
         "minLength":1,
         "metadata":{  
            "description":"Account for domain joining. Example: domain\\serviceaccount"
         }
      },
      "domainJoinPassword":{  
         "type":"securestring",
         "minLength":1,
         "metadata":{  
            "description":"Password for domain joining"
         }
      },
      "localAdmins":{  
         "type":"string",
         "defaultValue":"",
         "metadata":{  
            "description":"Users and groups added to the local administrator group."
         }
      },
      "SQLAdmins":{  
         "type":"string",
         "defaultValue":"",
         "metadata":{  
            "description":"SQL SYS admins that can login to the Default SQL Instance installed on the VM."
         }
      },
      "SQLServerAccount":{  
         "type":"string",
         "minLength":1,
         "metadata":{  
            "description":"SQL Server Service runas account.  Example: domain\\serviceaccount.This account will be AOAG Owner"
         }
      },
      "SQLServerPassword":{  
         "type":"securestring",
         "minLength":1,
         "metadata":{  
            "description":"Password Account to use for Running the SQL Server Service."
         }
      },
      "SQLAgentAccount":{  
         "type":"string",
         "minLength":1,
         "metadata":{  
            "description":"Account to use for Running the SQL Agent Service.  Example: domain\\serviceaccount"
         }
      },
      "SQLAgentPassword":{  
         "type":"securestring",
         "minLength":1,
         "metadata":{  
            "description":"Password for account to use for Running the SQL Agent Service."
         }
      },
      "StorageAccountType":{  
         "type":"string",
         "defaultValue":"Standard_LRS",
         "allowedValues":[  
            "Standard_LRS",
            "Premium_LRS",
            "StandardSSD_LRS"
         ],
         "metadata":{  
            "description":"Storage performance, Standard_LRS for standard skus and Premium_LRS for premium skus"
         }
      },
      "vmSize":{  
         "type":"string",
         "defaultValue":"Standard_D4_V2",
         "metadata":{  
            "description":"Size for the Virtual Machine. Details: https://docs.microsoft.com/en-us/azure/virtual-machines/virtual-machines-linux-sizes?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#standard-tier-d-series"
         }
      },
      "AcceleratedNetworking":{  
         "type":"string",
         "defaultValue":"true",
         "allowedValues":[  
            "false",
            "true"
         ],
         "metadata":{  
            "description":"Accelerated Networking can only be enabled on supported SKUs.  See https://docs.microsoft.com/en-us/azure/virtual-network/create-vm-accelerated-networking-powershell for details."
         }
      },
      "imagePublisher":{  
         "type":"string",
         "defaultValue":"MicrosoftSQLServer",
         "allowedValues":[  
            "MicrosoftSQLServer"
         ],
         "metadata":{  
            "description":"See Azure for available ImagePublisher for your Location. Sample Code: <p><a target=new href=https://msitwiki/get-imagepublisher-imageoffer-imagesku-for-arm-templates/>Get-AzureRMVMImagePublisher</a></p> Example: <p>MicrosoftSQLServer or MicrosoftWindowsServer</p>"
         }
      },
      "imageOffer":{  
         "type":"string",
         "defaultValue":"SQL2016-WS2012R2",
         "allowedValues":[  
            "SQL2012SP3-WS2012R2",
            "SQL2014SP2-WS2012R2",
            "SQL2016-WS2012R2"
         ],
         "metadata":{  
            "description":"See ImagePublisher link for more details."
         }
      },
      "sku":{  
         "type":"string",
         "minLength":1,
         "defaultValue":"Enterprise",
         "allowedValues":[  
            "Enterprise",
            "Standard"
         ],
         "metadata":{  
            "description":"See Azure for available ImageSKU for your Location. Sample Code: <p><a target=new href=https://msitwiki/get-imagepublisher-imageoffer-imagesku-for-arm-templates/>Get-AzureRmVMImageSku</a></p> Example: <p>Enterprise, Standard, Web, Express.<p>"
         }
      },
      "H_DriveSize":{  
         "defaultValue":32,
         "minValue":10,
         "maxValue":4096,
         "type":"Int",
         "metadata":{  
            "description":"The size in GB for the H drive from 10GB to 4096GB"
         }
      },
      "O_DriveSize":{  
         "defaultValue":32,
         "minValue":10,
         "maxValue":4096,
         "type":"Int",
         "metadata":{  
            "description":"The size in GB for the O drive from 10GB to 4096GB"
         }
      },
      "T_DriveSize":{  
         "defaultValue":32,
         "minValue":10,
         "maxValue":4096,
         "type":"Int",
         "metadata":{  
            "description":"The size in GB for the T drive from 10GB to 4096GB"
         }
      },
      "I_DriveSize":{  
         "defaultValue":0,
         "maxValue":4096,
         "type":"Int",
         "metadata":{  
            "description":"The size in GB for the I drive, Keeping it 0 will not create the disk"
         }
      },
      "J_DriveSize":{  
         "defaultValue":0,
         "maxValue":4096,
         "type":"Int",
         "metadata":{  
            "description":"The size in GB for the J drive, Keeping it 0 will not create the disk"
         }
      },
      "K_DriveSize":{  
         "defaultValue":0,
         "maxValue":4096,
         "type":"Int",
         "metadata":{  
            "description":"The size in GB for the K drive, Keeping it 0 will not create the disk"
         }
      },
      "L_DriveSize":{  
         "defaultValue":0,
         "maxValue":4096,
         "type":"Int",
         "metadata":{  
            "description":"The size in GB for the L drive, Keeping it 0 will not create the disk"
         }
      },
      "M_DriveSize":{  
         "defaultValue":0,
         "maxValue":4096,
         "type":"Int",
         "metadata":{  
            "description":"The size in GB for the M drive, Keeping it 0 will not create the disk"
         }
      },
      "Domain":{  
         "type":"string",
         "metadata":{  
            "description":"The FQDN of the AD domain."
         }
      },
    "ouPath": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The Organizational Unit the VM will join"
      }
    },
      "virtualNetwork":{  
         "type":"string",
         "defaultValue":"",
         "metadata":{  
            "description":"Name for the VirtualNetwork"
         }
      },
      "vnetResourceGroup":{  
         "type":"string",
         "metadata":{  
            "description":"Name for the Resource Group that contains VirtualNetwork."
         }
      },
      "subnetName":{  
         "type":"string",
         "defaultValue":"Subnet-1",
         "metadata":{  
            "description":"Name for the subnet"
         }
      }
   },
   "variables":{  
      "apiVersion":"2015-01-01",
      "branch":"master",
      "SASToken":"",
      "PullServerRegistrationKey":"",
      "PullServerRegistrationURI":"",
      "NestedBaseURL":"[concat('https://raw.githubusercontent.com/Microsoft/MSITARM/',variables('branch'))]",
      "customScriptRelativeFolderPath":"[concat(variables('branch'),'/all-scripts/')]",
      "scriptsURL":"[concat(variables('NestedBaseURL'),'/all-scripts/')]",
      "nestedURL":"[concat(variables('NestedBaseURL'),'/all-nested/')]",
      "createVMtemplate":"[concat('template-VirtualMachines-ILB-FSW.json',variables('SASToken'))]",
      "configurePullTemplate":"[concat('template-ConfigureDscPull.json',variables('SASToken'))]",
      "TelemetryCreateLogTemplate":"[concat('template-CreateTelemetryLog.json',variables('SASToken'))]",
      "TelemetryAddLogTemplate":"[concat('template-AddTelemetryLog.json',variables('SASToken'))]",
      "TelemetryCreateLogDetailsTemplateUrl":"[concat(variables('nestedURL'),variables('TelemetryCreateLogTemplate'))]",
      "TelemetryAddLogTemplateUrl":"[concat(variables('nestedURL'),variables('TelemetryAddLogTemplate'))]",
      "Standard_LRS":{  
         "DiskConfigValue":"SQLStd"
      },
      "Premium_LRS":{  
         "DiskConfigValue":"SQLPrem"
      },
      "StandardSSD_LRS":{  
         "DiskConfigValue":"SQLStdSSD"
      },
      "DiskConfig":"[variables(parameters('StorageAccountType')).DiskConfigValue]",
      "Role":"[substring(variables('DiskConfig'),0,3)]",
      "CreateVMUrl":"[concat(variables('nestedURL'),variables('createVMtemplate'))]",
      "AttachVMtoPullServerURL":"[concat(variables('nestedURL'),variables('configurePullTemplate'))]",
      "BuildMachineRoleURL":"[concat(variables('nestedURL'),'template-Build',variables('Role'), '.json',variables('SASToken'))]",
      "Clusterfeature":"[concat(variables('nestedURL'),'template-Clusterfeature.json',variables('SASToken'))]",
      "ClusterAOAG2012FSW":"[concat(variables('nestedURL'),'template-ClusterAOAG2012FSWSetup.json',variables('SASToken'))]",
      "AzureAutomation":{  
         "RegistrationKey":"[variables('PullServerRegistrationKey')]",
         "registrationUrl":"[variables('PullServerRegistrationURI')]",
         "configurationFunction":"UpdateLCMforAAPull.ps1\\ConfigureLCMforAAPull",
         "timestamp":"1/1/2015"
      }      
   },
   "resources":[  
      {  
         "apiVersion":"2015-01-01",
         "name":"CreateTelemetryDeploymentId",
         "type":"Microsoft.Resources/deployments",
         "properties":{  
            "mode":"Incremental",
            "templateLink":{  
               "uri":"[variables('TelemetryCreateLogDetailsTemplateUrl')]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{  
               "UserName":{  
                  "value":"[parameters('domainJoinUserName')]"
               },
               "NumberOfVMs":{  
                  "value":"[parameters('numberOfInstances')]"
               },
               "TemplateName":{  
                  "value":"301-SQL-AOAG-FileShareWitness-build"
               },
               "InvokedBy":{  
                  "value":"CSEOTemplate"
               },
               "branch":{  
                  "value":"[variables('branch')]"
               }
            }
         }
      },
      {  
         "apiVersion":"2015-01-01",
         "name":"[concat(parameters('vmName'),'-CreateVM')]",
         "type":"Microsoft.Resources/deployments",
         "properties":{  
            "mode":"Incremental",
            "templateLink":{  
               "uri":"[variables('CreateVMUrl')]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{  
               "localAdminUserName":{  
                  "value":"[parameters('localAdminUserName')]"
               },
               "localAdminPassword":{  
                  "value":"[parameters('localAdminPassword')]"
               },
               "domainJoinUserName":{  
                  "value":"[parameters('domainJoinUserName')]"
               },
               "domainJoinPassword":{  
                  "value":"[parameters('domainJoinPassword')]"
               },
               "localAdmins":{  
                  "value":"[parameters('localAdmins')]"
               },
               "SQLAdmins":{  
                  "value":"[parameters('SQLAdmins')]"
               },
               "vmName":{  
                  "value":"[parameters('vmName')]"
               },
               "loadBalancerName":{  
                  "value":"[parameters('loadBalancerName')]"
               },
               "AvailabilitySet":{  
                  "value":"[parameters('AvailabilitySet')]"
               },
               "StorageAccountType":{  
                  "value":"[parameters('StorageAccountType')]"
               },
               "DiskConfig":{  
                  "value":"[variables('DiskConfig')]"
               },
               "vmSize":{  
                  "value":"[parameters('vmSize')]"
               },
               "H_DriveSize":{  
                  "value":"[parameters('H_DriveSize')]"
               },
               "O_DriveSize":{  
                  "value":"[parameters('O_DriveSize')]"
               },
               "T_DriveSize":{  
                  "value":"[parameters('T_DriveSize')]"
               },
               "I_DriveSize":{  
                  "value":"[parameters('I_DriveSize')]"
               },
               "J_DriveSize":{  
                  "value":"[parameters('J_DriveSize')]"
               },
               "K_DriveSize":{  
                  "value":"[parameters('K_DriveSize')]"
               },
               "L_DriveSize":{  
                  "value":"[parameters('L_DriveSize')]"
               },
               "M_DriveSize":{  
                  "value":"[parameters('M_DriveSize')]"
               },
               "AcceleratedNetworking":{  
                  "value":"[parameters('AcceleratedNetworking')]"
               },
               "numberOfInstances":{  
                  "value":"[parameters('numberOfInstances')]"
               },
               "imagePublisher":{  
                  "value":"[parameters('imagePublisher')]"
               },
               "imageOffer":{  
                  "value":"[parameters('imageOffer')]"
               },
               "sku":{  
                  "value":"[parameters('sku')]"
               },
              "domainName": {
                "value": "[parameters('Domain')]"
              },
               "virtualNetwork":{  
                  "value":"[parameters('virtualNetwork')]"
               },
               "vnetResourceGroup":{  
                  "value":"[parameters('vnetResourceGroup')]"
               },
               "subnetName":{  
                  "value":"[parameters('subnetName')]"
               },
               "ouPath":{  
                  "value":"[parameters('OUPath')]"
               },
               "NestedBaseURL":{  
                  "value":"[variables('NestedBaseURL')]"
               },
               "SASToken":{  
                  "value":"[variables('SASToken')]"
               }
            }
         }
      },
      {  
         "apiVersion":"2015-01-01",
         "name":"[concat(parameters('vmName'),copyindex(1),'-BuildMachineRole-',variables('Role'))]",
         "type":"Microsoft.Resources/deployments",
         "copy":{  
            "name":"BuildMachineRoleLoop",
            "count":"[parameters('numberOfInstances')]"
         },
         "properties":{  
            "mode":"Incremental",
            "templateLink":{  
               "uri":"[variables('BuildMachineRoleURL')]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{  
               "vmName":{  
                  "value":"[concat(parameters('vmName'),copyindex(1))]"
               },
               "DiskConfig":{  
                  "value":"[variables('DiskConfig')]"
               },
               "vmSize":{  
                  "value":"[parameters('vmSize')]"
               },
               "SQLServerAccount":{  
                  "value":"[parameters('SQLServerAccount')]"
               },
               "SQLServerPassword":{  
                  "value":"[parameters('SQLServerPassword')]"
               },
               "SQLAgentAccount":{  
                  "value":"[parameters('SQLAgentAccount')]"
               },
               "SQLAgentPassword":{  
                  "value":"[parameters('SQLAgentPassword')]"
               },
               "SQLAdmin":{  
                  "value":"[parameters('domainJoinUserName')]"
               },
               "SQLAdminPwd":{  
                  "value":"[parameters('domainJoinPassword')]"
               },
               "NestedBaseURL":{  
                  "value":"[variables('NestedBaseURL')]"
               },
               "SASToken":{  
                  "value":"[variables('SASToken')]"
               }
            }
         },
         "dependsOn":[  
            "[concat('Microsoft.Resources/deployments/',parameters('vmName'), '-CreateVM')]"
         ]
      },
      {  
         "apiVersion":"2015-01-01",
         "name":"[concat(parameters('vmName'),copyindex(1),'-AttachVMtoPullServer')]",
         "type":"Microsoft.Resources/deployments",
         "copy":{  
            "name":"AttachVMtoPullServerLoop",
            "count":"[parameters('numberOfInstances')]"
         },
         "properties":{  
            "mode":"Incremental",
            "templateLink":{  
               "uri":"[variables('AttachVMtoPullServerURL')]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{  
               "vmName":{  
                  "value":"[concat(parameters('vmName'),copyindex(1))]"
               },
               "RegistrationKey":{  
                  "value":"[variables('AzureAutomation').RegistrationKey]"
               },
               "registrationUrl":{  
                  "value":"[variables('AzureAutomation').registrationUrl]"
               },
               "timestamp":{  
                  "value":"[variables('AzureAutomation').timestamp]"
               },
               "vNetRG":{  
                  "value":"[parameters('vnetResourceGroup')]"
               },
               "NestedBaseURL":{  
                  "value":"[variables('NestedBaseURL')]"
               },
               "SASToken":{  
                  "value":"[variables('SASToken')]"
               }
            }
         },
         "dependsOn":[  
            "[concat('Microsoft.Resources/deployments/',parameters('vmName'),copyindex(1),'-BuildMachineRole-',variables('Role'))]"
         ]
      },
      {  
         "apiVersion":"2015-01-01",
         "name":"[concat(parameters('vmName'),'-Clusterfeature')]",
         "type":"Microsoft.Resources/deployments",
         "properties":{  
            "mode":"Incremental",
            "templateLink":{  
               "uri":"[variables('Clusterfeature')]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{  
               "vmName":{  
                  "value":"[parameters('vmName')]"
               },
               "numberOfInstances":{  
                  "value":"[parameters('numberOfInstances')]"
               },
               "NestedBaseURL":{  
                  "value":"[variables('NestedBaseURL')]"
               },
               "SASToken":{  
                  "value":"[variables('SASToken')]"
               }
            }
         },
         "dependsOn":[  
            "[concat('Microsoft.Resources/deployments/',parameters('vmName'),'1','-AttachVMtoPullServer')]"
         ]
      },
      {  
         "apiVersion":"2015-01-01",
         "name":"[concat(parameters('vmName'),'-ClusterAOAG2012FSWSetup')]",
         "type":"Microsoft.Resources/deployments",
         "properties":{  
            "mode":"Incremental",
            "templateLink":{  
               "uri":"[variables('ClusterAOAG2012FSW')]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{  
               "vmName":{  
                  "value":"[parameters('vmName')]"
               },
               "numberOfInstances":{  
                  "value":"[parameters('numberOfInstances')]"
               },
               "ILBStaticIP":{  
                  "value":"[reference(concat(parameters('vmName'),'-CreateVM')).outputs.ipaddress.value]"
               },
               "AOAGListenerName":{  
                  "value":"[parameters('AOAGListenerName')]"
               },
               "FailoverClusterName":{  
                  "value":"[parameters('FailoverClusterName')]"
               },
               "FileshareWitnessPath":{  
                  "value":"[parameters('FileshareWitnessPath')]"
               },
               "ClusterSetupAccount":{  
                  "value":"[parameters('SQLServerAccount')]"
               },
               "ClusterSetupPassword":{  
                  "value":"[parameters('SQLServerPassword')]"
               },
               "NestedBaseURL":{  
                  "value":"[variables('NestedBaseURL')]"
               },
               "SASToken":{  
                  "value":"[variables('SASToken')]"
               },
               "customScriptRelativeFolderPath":{  
                  "value":"[variables('customScriptRelativeFolderPath')]"
               }
            }
         },
         "dependsOn":[  
            "[concat('Microsoft.Resources/deployments/',parameters('vmName'),'-Clusterfeature')]"
         ]
      },
      {  
         "apiVersion":"2015-01-01",
         "name":"[concat(parameters('vmName'),'-CreateVM','-LogSuccess')]",
         "type":"Microsoft.Resources/deployments",
         "properties":{  
            "mode":"Incremental",
            "templateLink":{  
               "uri":"[variables('TelemetryAddLogTemplateUrl')]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{  
               "TelemetryID":{  
                  "value":"[reference('CreateTelemetryDeploymentId').outputs.TelemetryID.value]"
               },
               "TemplateName":{  
                  "value":"[variables('createVMtemplate')]"
               },
               "ResourceName":{  
                  "value":"[parameters('vmName')]"
               },
               "Logtype":{  
                  "value":"StatusLog"
               },
               "Status":{  
                  "value":"Success"
               },
               "ResourceType":{  
                  "value":"LinkedTemplate"
               },
               "branch":{  
                  "value":"[variables('branch')]"
               }
            }
         },
         "dependsOn":[  
            "Microsoft.Resources/deployments/CreateTelemetryDeploymentId",
            "[concat('Microsoft.Resources/deployments/',parameters('vmName'),'-CreateVM')]"
         ]
      },
      {  
         "apiVersion":"2015-01-01",
         "name":"[concat(parameters('vmName'),copyindex(1),'-BuildMachineRole-',variables('Role'),'-LogSuccess')]",
         "type":"Microsoft.Resources/deployments",
         "copy":{  
            "name":"LogBuildMachineRoleLoop",
            "count":"[parameters('numberOfInstances')]"
         },
         "properties":{  
            "mode":"Incremental",
            "templateLink":{  
               "uri":"[variables('TelemetryAddLogTemplateUrl')]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{  
               "TelemetryID":{  
                  "value":"[reference('CreateTelemetryDeploymentId').outputs.TelemetryID.value]"
               },
               "TemplateName":{  
                  "value":"[concat('template-Build',variables('Role'), '.json')]"
               },
               "ResourceName":{  
                  "value":"[concat(parameters('vmName'),copyindex(1))]"
               },
               "Logtype":{  
                  "value":"StatusLog"
               },
               "Status":{  
                  "value":"Success"
               },
               "ResourceType":{  
                  "value":"LinkedTemplate"
               },
               "branch":{  
                  "value":"[variables('branch')]"
               }
            }
         },
         "dependsOn":[  
            "Microsoft.Resources/deployments/CreateTelemetryDeploymentId",
            "[concat('Microsoft.Resources/deployments/',parameters('vmName'),copyindex(1),'-BuildMachineRole-',variables('Role'))]"
         ]
      },
      {  
         "apiVersion":"2015-01-01",
         "name":"[concat(parameters('vmName'),copyindex(1),'-AttachPullServer-LogSuccess')]",
         "type":"Microsoft.Resources/deployments",
         "copy":{  
            "name":"AttachVMtoPullServerLogLoop",
            "count":"[parameters('numberOfInstances')]"
         },
         "properties":{  
            "mode":"Incremental",
            "templateLink":{  
               "uri":"[variables('TelemetryAddLogTemplateUrl')]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{  
               "TelemetryID":{  
                  "value":"[reference('CreateTelemetryDeploymentId').outputs.TelemetryID.value]"
               },
               "TemplateName":{  
                  "value":"[variables('configurePullTemplate')]"
               },
               "ResourceName":{  
                  "value":"[concat(parameters('vmName'),copyindex(1))]"
               },
               "Logtype":{  
                  "value":"StatusLog"
               },
               "Status":{  
                  "value":"Success"
               },
               "ResourceType":{  
                  "value":"LinkedTemplate"
               },
               "branch":{  
                  "value":"[variables('branch')]"
               }
            }
         },
         "dependsOn":[  
            "Microsoft.Resources/deployments/CreateTelemetryDeploymentId",
            "[concat('Microsoft.Resources/deployments/',parameters('vmName'),copyindex(1),'-AttachVMtoPullServer')]"
         ]
      },
      {  
         "apiVersion":"2015-01-01",
         "name":"[concat(parameters('vmName'),'-Clusterfeature','-LogSuccess')]",
         "type":"Microsoft.Resources/deployments",
         "properties":{  
            "mode":"Incremental",
            "templateLink":{  
               "uri":"[variables('TelemetryAddLogTemplateUrl')]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{  
               "TelemetryID":{  
                  "value":"[reference('CreateTelemetryDeploymentId').outputs.TelemetryID.value]"
               },
               "TemplateName":{  
                  "value":"[variables('Clusterfeature')]"
               },
               "ResourceName":{  
                  "value":"[parameters('vmName')]"
               },
               "Logtype":{  
                  "value":"StatusLog"
               },
               "Status":{  
                  "value":"Success"
               },
               "ResourceType":{  
                  "value":"LinkedTemplate"
               },
               "branch":{  
                  "value":"[variables('branch')]"
               }
            }
         },
         "dependsOn":[  
            "Microsoft.Resources/deployments/CreateTelemetryDeploymentId",
            "[concat('Microsoft.Resources/deployments/',parameters('vmName'),'-Clusterfeature')]"
         ]
      },
      {  
         "apiVersion":"2015-01-01",
         "name":"[concat(parameters('vmName'),'-ClusterAOAG2012FSWSetup','-LogSuccess')]",
         "type":"Microsoft.Resources/deployments",
         "properties":{  
            "mode":"Incremental",
            "templateLink":{  
               "uri":"[variables('TelemetryAddLogTemplateUrl')]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{  
               "TelemetryID":{  
                  "value":"[reference('CreateTelemetryDeploymentId').outputs.TelemetryID.value]"
               },
               "TemplateName":{  
                  "value":"[variables('ClusterAOAG2012FSW')]"
               },
               "ResourceName":{  
                  "value":"[parameters('vmName')]"
               },
               "Logtype":{  
                  "value":"StatusLog"
               },
               "Status":{  
                  "value":"Success"
               },
               "ResourceType":{  
                  "value":"LinkedTemplate"
               },
               "branch":{  
                  "value":"[variables('branch')]"
               }
            }
         },
         "dependsOn":[  
            "Microsoft.Resources/deployments/CreateTelemetryDeploymentId",
            "[concat('Microsoft.Resources/deployments/',parameters('vmName'),'-ClusterAOAG2012FSWSetup')]"
         ]
      }
   ]
}
