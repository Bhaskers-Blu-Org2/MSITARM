{  
   "$schema":"https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
   "contentVersion":"1.0.0.0",
   "parameters":{  
      "vmName":{  
         "type":"string",
         "defaultValue":"",
         "minLength":3,
         "maxLength":13,
         "metadata":{  
            "description":"Name for the Virtual Machine. Name will be iterated for each VM starting at 1."
         }
      },
      "AvailabilitySet":{  
         "type":"string",
         "defaultValue":"",
         "minLength":3,
         "metadata":{  
            "description":"Name for the AvailabilitySet."
         }
      },
      "loadBalancerName":{  
         "type":"string",
         "defaultValue":"",
         "minLength":3,
         "metadata":{  
            "description":"Name for the LoadBalancer."
         }
      },
      "numberOfInstances":{  
         "type":"int",
         "defaultValue":2,
         "metadata":{  
            "Description":"Number of Azure VM to create."
         }
      },
      "localAdminUserName":{  
         "type":"string",
         "minLength":1,
         "metadata":{  
            "description":"Local Username for the Virtual Machine."
         }
      },
      "localAdminPassword":{  
         "type":"securestring",
         "minLength":1,
         "metadata":{  
            "description":"Local Password for the Virtual Machine."
         }
      },
      "domainJoinUserName":{  
         "type":"string",
         "minLength":1,
         "metadata":{  
            "description":"Account for domain joining. Example: domain\\serviceaccount"
         }
      },
      "domainJoinPassword":{  
         "type":"securestring",
         "minLength":1,
         "metadata":{  
            "description":"Password for domain joining"
         }
      },
      "localAdmins":{  
         "type":"string",
         "defaultValue":"",
         "metadata":{  
            "description":"Users and groups added to the local administrator group."
         }
      },
      "AcceleratedNetworking":{  
         "type":"string",
         "defaultValue":"true",
         "allowedValues":[  
            "false",
            "true"
         ],
         "metadata":{  
            "description":"Accelerated Networking can only be enabled on supported SKUs.  See https://docs.microsoft.com/en-us/azure/virtual-network/create-vm-accelerated-networking-powershell for details."
         }
      },
      "imagePublisher":{  
         "type":"string",
         "defaultValue":"MicrosoftWindowsServer",
         "allowedValues":[  
            "MicrosoftWindowsServer"
         ],
         "metadata":{  
            "description":"See Azure for available ImagePublisher for your Location. Sample Code: <p><a target=new href=https://msitwiki/get-imagepublisher-imageoffer-imagesku-for-arm-templates/>Get-AzureRMVMImagePublisher</a></p> Example: <p>MicrosoftSQLServer or MicrosoftWindowsServer</p>"
         }
      },
      "imageOffer":{  
         "type":"string",
         "defaultValue":"WindowsServer",
         "allowedValues":[  
            "WindowsServer"
         ],
         "metadata":{  
            "description":"See ImagePublisher link for more details."
         }
      },
      "sku":{  
         "type":"string",
         "minLength":1,
         "defaultValue":"2016-Datacenter",
         "allowedValues":[  
            "2012-R2-Datacenter",
            "2016-Datacenter",
            "2019-datacenter"
         ],
         "metadata":{  
            "description":"See Azure for available ImageSKU for your Location. Sample Code: <p><a target=new href=https://msitwiki/get-imagepublisher-imageoffer-imagesku-for-arm-templates/>Get-AzureRmVMImageSku</a></p> Example: <p>Enterprise, Standard, Web, Express.<p>"
         }
      },
      "StorageAccountType":{  
         "type":"string",
         "defaultValue":"Standard_LRS",
         "allowedValues":[  
            "Standard_LRS",
            "Premium_LRS",
            "StandardSSD_LRS"
         ],
         "metadata":{  
            "description":"Storage performance, Standard_LRS for standard skus and Premium_LRS for premium skus"
         }
      },
      "vmSize":{  
         "type":"string",
         "defaultValue":"Standard_D4_V2",
         "metadata":{  
            "description":"Size for the Virtual Machine. Details: https://docs.microsoft.com/en-us/azure/virtual-machines/virtual-machines-linux-sizes?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#standard-tier-d-series"
         }
      },
      "DiskConfig":{  
         "type":"string",
         "defaultValue":"IIS",
         "allowedValues":[  
            "Win",
            "IIS"
         ],
         "metadata":{  
            "description":"Used to control the diskconfiguration which includes the intiial drive letters used."
         }
      },
      "I_DriveSize":{  
         "defaultValue":0,
         "maxValue":4096,
         "type":"Int",
         "metadata":{  
            "description":"The size in GB for the I drive, Keeping it 0 will not create the disk"
         }
      },
      "J_DriveSize":{  
         "defaultValue":0,
         "maxValue":4096,
         "type":"Int",
         "metadata":{  
            "description":"The size in GB for the J drive, Keeping it 0 will not create the disk"
         }
      },
      "K_DriveSize":{  
         "defaultValue":0,
         "maxValue":4096,
         "type":"Int",
         "metadata":{  
            "description":"The size in GB for the K drive, Keeping it 0 will not create the disk"
         }
      },
      "L_DriveSize":{  
         "defaultValue":0,
         "maxValue":4096,
         "type":"Int",
         "metadata":{  
            "description":"The size in GB for the L drive, Keeping it 0 will not create the disk"
         }
      },
      "DiskEncryption":{  
         "defaultValue":"false",
         "allowedValues":[  
            "false",
            "true"
         ],
         "type":"String",
         "metadata":{  
            "description":"Azure Disk Encryption.  See https://docs.microsoft.com/en-us/azure/security/azure-security-disk-encryption-overview for details."
         }
      },
      "keyVaultName":{  
         "type":"string",
         "defaultValue":"",
         "metadata":{  
            "description":"Name of the KeyVault to place the volume encryption key"
         }
      },
      "keyVaultResourceGroup":{  
         "type":"string",
         "defaultValue":"",
         "metadata":{  
            "description":"Resource group of the KeyVault"
         }
      },
    "Domain": {
      "type": "string",
      "metadata": {
        "description": "The FQDN of the AD domain."
      }
    },
    "ouPath": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "The Organizational Unit the VM will join"
      }
    },
      "virtualNetwork":{  
         "type":"string",
         "defaultValue":"",
         "metadata":{  
            "description":"Name for the VirtualNetwork"
         }
      },
      "vnetResourceGroup":{  
         "type":"string",
         "metadata":{  
            "description":"Name for the Resource Group that contains VirtualNetwork. "
         }
      },
      "subnetName":{  
         "type":"string",
         "defaultValue":"Subnet-1",
         "metadata":{  
            "description":"Name for the subnet"
         }
      },
      "bootDiagnosticsStorageaccount":{  
         "defaultValue":"",
         "type":"String",
         "metadata":{  
            "description":"Name of the storage account for Boot diagnostics, If it is kept blank a new storage account will be created"
         }
      }
   },
  "variables":{
     "apiVersion":"2015-01-01",
     "branch":"master",
     "SASToken":"",
     "PullServerRegistrationKey":"",
     "PullServerRegistrationURI":"",
     "NestedBaseURL":"[concat('https://raw.githubusercontent.com/Microsoft/MSITARM/',variables('branch'))]",
     "scriptsURL":"[concat(variables('NestedBaseURL'),'/all-scripts/')]",
     "nestedURL":"[concat(variables('NestedBaseURL'),'/all-nested/')]",
     "createVMtemplate":"[concat('template-VirtualMachines-ILB.json',variables('SASToken'))]",
     "configurePullTemplate":"[concat('template-ConfigureDscPull.json',variables('SASToken'))]",
     "TelemetryCreateLogTemplate":"[concat('template-CreateTelemetryLog.json',variables('SASToken'))]",
     "TelemetryAddLogTemplate":"[concat('template-AddTelemetryLog.json',variables('SASToken'))]",
     "Role":"[substring(parameters('DiskConfig'),0,3)]",
     "CreateVMUrl":"[concat(variables('nestedURL'),variables('createVMtemplate'))]",
     "AttachVMtoPullServerURL":"[concat(variables('nestedURL'),variables('configurePullTemplate'))]",
     "BuildMachineRoleURL":"[concat(variables('nestedURL'),'template-Build',variables('Role'), '.json',variables('SASToken'))]",
     "TelemetryCreateLogDetailsTemplateUrl":"[concat(variables('nestedURL'),variables('TelemetryCreateLogTemplate'))]",
     "TelemetryAddLogTemplateUrl":"[concat(variables('nestedURL'),variables('TelemetryAddLogTemplate'))]",
     "createADEtemplate":"[concat('template-ADE.json',variables('SASToken'))]",
     "CreateADEUrl":"[concat(variables('nestedURL'),variables('createADEtemplate'))]",
     "bootdiagSA":"[toLower(if(equals(parameters('bootDiagnosticsStorageaccount'),''),concat(parameters('vmName'),'bdgsa'), parameters('bootDiagnosticsStorageaccount')))]",
     "AzureAutomation":{
       "RegistrationKey":"[variables('PullServerRegistrationKey')]",
       "registrationUrl":"[variables('PullServerRegistrationURI')]",
       "configurationFunction":"UpdateLCMforAAPull.ps1\\ConfigureLCMforAAPull",
       "timestamp":"1/1/2015"
     }
  },
   "resources":[  
      {  
         "apiVersion":"2015-01-01",
         "name":"CreateTelemetryDeploymentId",
         "type":"Microsoft.Resources/deployments",
         "properties":{  
            "mode":"Incremental",
            "templateLink":{  
               "uri":"[variables('TelemetryCreateLogDetailsTemplateUrl')]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{  
               "UserName":{  
                  "value":"[parameters('domainJoinUserName')]"
               },
               "NumberOfVMs":{  
                  "value":"[parameters('numberOfInstances')]"
               },
               "TemplateName":{  
                  "value":"301-Windows-VirtualMachines-WebILB-build"
               },
               "InvokedBy":{  
                  "value":"CSEOTemplate"
               },
               "branch":{  
                  "value":"[variables('branch')]"
               }
            }
         }
      },
      {  
         "type":"Microsoft.Storage/storageAccounts",
         "name":"[variables('bootdiagSA')]",
         "apiVersion":"2018-07-01",
         "location":"[resourceGroup().location]",
         "properties":{  
            "accessTier":"Hot",
            "supportsHttpsTrafficOnly":true
         },
         "dependsOn":[  

         ],
         "sku":{  
            "name":"Standard_LRS"
         },
         "kind":"StorageV2"
      },
      {  
         "apiVersion":"2015-01-01",
         "name":"[concat(parameters('vmName'),'-CreateVM')]",
         "type":"Microsoft.Resources/deployments",
         "properties":{  
            "mode":"Incremental",
            "templateLink":{  
               "uri":"[variables('CreateVMUrl')]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{  
               "localAdminUserName":{  
                  "value":"[parameters('localAdminUserName')]"
               },
               "localAdminPassword":{  
                  "value":"[parameters('localAdminPassword')]"
               },
               "domainJoinUserName":{  
                  "value":"[parameters('domainJoinUserName')]"
               },
               "domainJoinPassword":{  
                  "value":"[parameters('domainJoinPassword')]"
               },
               "localAdmins":{  
                  "value":"[parameters('localAdmins')]"
               },
               "SQLAdmins":{  
                  "value":""
               },
               "vmName":{  
                  "value":"[parameters('vmName')]"
               },
               "AvailabilitySet":{  
                  "value":"[parameters('AvailabilitySet')]"
               },
               "loadBalancerName":{  
                  "value":"[parameters('loadBalancerName')]"
               },
               "DiskConfig":{  
                  "value":"[parameters('DiskConfig')]"
               },
               "vmSize":{  
                  "value":"[parameters('vmSize')]"
               },
               "I_DriveSize":{  
                  "value":"[parameters('I_DriveSize')]"
               },
               "J_DriveSize":{  
                  "value":"[parameters('J_DriveSize')]"
               },
               "K_DriveSize":{  
                  "value":"[parameters('K_DriveSize')]"
               },
               "L_DriveSize":{  
                  "value":"[parameters('L_DriveSize')]"
               },
               "AcceleratedNetworking":{  
                  "value":"[parameters('AcceleratedNetworking')]"
               },
               "numberOfInstances":{  
                  "value":"[parameters('numberOfInstances')]"
               },
               "imagePublisher":{  
                  "value":"[parameters('imagePublisher')]"
               },
               "imageOffer":{  
                  "value":"[parameters('imageOffer')]"
               },
               "sku":{  
                  "value":"[parameters('sku')]"
               },
               "StorageAccountType":{  
                  "value":"[parameters('StorageAccountType')]"
               },
               "domainName":{  
                  "value":"[parameters('Domain')]"
               },
               "virtualNetwork":{  
                  "value":"[parameters('virtualNetwork')]"
               },
               "vnetResourceGroup":{  
                  "value":"[parameters('vnetResourceGroup')]"
               },
               "subnetName":{  
                  "value":"[parameters('subnetName')]"
               },
              "ouPath": {
                "value": "[parameters('OUPath')]"
              },
               "NestedBaseURL":{  
                  "value":"[variables('NestedBaseURL')]"
               },
               "SASToken":{  
                  "value":"[variables('SASToken')]"
               },
               "bootdiagSA":{  
                  "value":"[variables('bootdiagSA')]"
               }
            }
         },
         "dependsOn":[  
            "[concat('Microsoft.Storage/storageAccounts/', variables('bootdiagSA'))]"
         ]
      },
      {  
         "apiVersion":"2015-01-01",
         "name":"[concat(parameters('vmName'),copyindex(1),'-BuildMachineRole-',variables('Role'))]",
         "type":"Microsoft.Resources/deployments",
         "copy":{  
            "name":"BuildMachineRoleLoop",
            "count":"[parameters('numberOfInstances')]"
         },
         "properties":{  
            "mode":"Incremental",
            "templateLink":{  
               "uri":"[variables('BuildMachineRoleURL')]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{  
               "vmName":{  
                  "value":"[concat(parameters('vmName'),copyindex(1))]"
               },
               "DiskConfig":{  
                  "value":"[parameters('DiskConfig')]"
               },
               "vmSize":{  
                  "value":"[parameters('vmSize')]"
               },
               "NestedBaseURL":{  
                  "value":"[variables('NestedBaseURL')]"
               },
               "SASToken":{  
                  "value":"[variables('SASToken')]"
               }
            }
         },
         "dependsOn":[  
            "[concat('Microsoft.Resources/deployments/',parameters('vmName'), '-CreateVM')]"
         ]
      },
      {  
         "apiVersion":"2015-01-01",
         "name":"[concat(parameters('vmName'),copyindex(1),'-AttachVMtoPullServer')]",
         "type":"Microsoft.Resources/deployments",
         "copy":{  
            "name":"AttachVMtoPullServerLoop",
            "count":"[parameters('numberOfInstances')]"
         },
         "properties":{  
            "mode":"Incremental",
            "templateLink":{  
               "uri":"[variables('AttachVMtoPullServerURL')]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{  
               "vmName":{  
                  "value":"[concat(parameters('vmName'),copyindex(1))]"
               },
               "RegistrationKey":{  
                  "value":"[variables('AzureAutomation').RegistrationKey]"
               },
               "registrationUrl":{  
                  "value":"[variables('AzureAutomation').registrationUrl]"
               },
               "timestamp":{  
                  "value":"[variables('AzureAutomation').timestamp]"
               },
               "vNetRG":{  
                  "value":"[parameters('vnetResourceGroup')]"
               },
               "NestedBaseURL":{  
                  "value":"[variables('NestedBaseURL')]"
               },
               "SASToken":{  
                  "value":"[variables('SASToken')]"
               }
            }
         },
         "dependsOn":[  
            "[concat('Microsoft.Resources/deployments/',parameters('vmName'),copyindex(1),'-BuildMachineRole-',variables('Role'))]"
         ]
      },
      {  
         "type":"Microsoft.Resources/deployments",
         "condition":"[equals(parameters('DiskEncryption'), 'true')]",
         "name":"[concat(parameters('vmName'),if(equals(parameters('numberOfInstances'),1),'', copyindex(1)),'-ADE')]",
         "apiVersion":"2015-01-01",
         "copy":{  
            "name":"ADELoop",
            "count":"[parameters('numberOfInstances')]"
         },
         "properties":{  
            "mode":"Incremental",
            "templateLink":{  
               "uri":"[variables('CreateADEUrl')]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{  
               "vmName":{  
                  "value":"[concat(parameters('vmName'),if(equals(parameters('numberOfInstances'),1),'', copyindex(1)))]"
               },
               "keyVaultName":{  
                  "value":"[parameters('keyVaultName')]"
               },
               "keyVaultResourceGroup":{  
                  "value":"[parameters('keyVaultResourceGroup')]"
               }
            }
         },
         "dependsOn":[  
            "[concat('Microsoft.Resources/deployments/',parameters('vmName'), '-CreateVM')]",
			"BuildMachineRoleLoop"
         ]
      },
      {  
         "apiVersion":"2015-01-01",
         "name":"[concat(parameters('vmName'),'-CreateVM','-LogSuccess')]",
         "type":"Microsoft.Resources/deployments",
         "properties":{  
            "mode":"Incremental",
            "templateLink":{  
               "uri":"[variables('TelemetryAddLogTemplateUrl')]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{  
               "TelemetryID":{  
                  "value":"[reference('CreateTelemetryDeploymentId').outputs.TelemetryID.value]"
               },
               "TemplateName":{  
                  "value":"[variables('createVMtemplate')]"
               },
               "ResourceName":{  
                  "value":"[parameters('vmName')]"
               },
               "Logtype":{  
                  "value":"StatusLog"
               },
               "Status":{  
                  "value":"Success"
               },
               "ResourceType":{  
                  "value":"LinkedTemplate"
               },
               "branch":{  
                  "value":"[variables('branch')]"
               }
            }
         },
         "dependsOn":[  
            "Microsoft.Resources/deployments/CreateTelemetryDeploymentId",
            "[concat('Microsoft.Resources/deployments/',parameters('vmName'),'-CreateVM')]"
         ]
      },
      {  
         "apiVersion":"2015-01-01",
         "name":"[concat(parameters('vmName'),copyindex(1),'-BuildMachineRole-',variables('Role'),'-LogSuccess')]",
         "type":"Microsoft.Resources/deployments",
         "copy":{  
            "name":"LogBuildMachineRoleLoop",
            "count":"[parameters('numberOfInstances')]"
         },
         "properties":{  
            "mode":"Incremental",
            "templateLink":{  
               "uri":"[variables('TelemetryAddLogTemplateUrl')]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{  
               "TelemetryID":{  
                  "value":"[reference('CreateTelemetryDeploymentId').outputs.TelemetryID.value]"
               },
               "TemplateName":{  
                  "value":"[concat('template-Build',variables('Role'), '.json')]"
               },
               "ResourceName":{  
                  "value":"[concat(parameters('vmName'),copyindex(1))]"
               },
               "Logtype":{  
                  "value":"StatusLog"
               },
               "Status":{  
                  "value":"Success"
               },
               "ResourceType":{  
                  "value":"LinkedTemplate"
               },
               "branch":{  
                  "value":"[variables('branch')]"
               }
            }
         },
         "dependsOn":[  
            "Microsoft.Resources/deployments/CreateTelemetryDeploymentId",
            "[concat('Microsoft.Resources/deployments/',parameters('vmName'),copyindex(1),'-BuildMachineRole-',variables('Role'))]"
         ]
      },
      {  
         "apiVersion":"2015-01-01",
         "name":"[concat(parameters('vmName'),copyindex(1),'-AttachPullServer-LogSuccess')]",
         "type":"Microsoft.Resources/deployments",
         "copy":{  
            "name":"AttachVMtoPullServerLogLoop",
            "count":"[parameters('numberOfInstances')]"
         },
         "properties":{  
            "mode":"Incremental",
            "templateLink":{  
               "uri":"[variables('TelemetryAddLogTemplateUrl')]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{  
               "TelemetryID":{  
                  "value":"[reference('CreateTelemetryDeploymentId').outputs.TelemetryID.value]"
               },
               "TemplateName":{  
                  "value":"[variables('configurePullTemplate')]"
               },
               "ResourceName":{  
                  "value":"[concat(parameters('vmName'),copyindex(1))]"
               },
               "Logtype":{  
                  "value":"StatusLog"
               },
               "Status":{  
                  "value":"Success"
               },
               "ResourceType":{  
                  "value":"LinkedTemplate"
               },
               "branch":{  
                  "value":"[variables('branch')]"
               }
            }
         },
         "dependsOn":[  
            "Microsoft.Resources/deployments/CreateTelemetryDeploymentId",
            "[concat('Microsoft.Resources/deployments/',parameters('vmName'),copyindex(1),'-AttachVMtoPullServer')]"
         ]
      },
      {  
         "type":"Microsoft.Resources/deployments",
         "condition":"[equals(parameters('DiskEncryption'), 'true')]",
         "name":"[concat(parameters('vmName'),if(equals(parameters('numberOfInstances'),1),'', copyindex(1)),'-ADE-LogSuccess')]",
         "apiVersion":"2015-01-01",
         "copy":{  
            "name":"ADELogLoop",
            "count":"[parameters('numberOfInstances')]"
         },
         "properties":{  
            "mode":"Incremental",
            "templateLink":{  
               "uri":"[variables('TelemetryAddLogTemplateUrl')]",
               "contentVersion":"1.0.0.0"
            },
            "parameters":{  
               "TelemetryID":{  
                  "value":"[reference('CreateTelemetryDeploymentId').outputs.TelemetryID.value]"
               },
               "TemplateName":{  
                  "value":"[variables('createADEtemplate')]"
               },
               "ResourceName":{  
                  "value":"[concat(parameters('vmName'),if(equals(parameters('numberOfInstances'),1),'', copyindex(1)))]"
               },
               "Logtype":{  
                  "value":"StatusLog"
               },
               "Status":{  
                  "value":"Success"
               },
               "ResourceType":{  
                  "value":"LinkedTemplate"
               },
               "branch":{  
                  "value":"[variables('branch')]"
               }
            }
         },
         "dependsOn":[  
            "Microsoft.Resources/deployments/CreateTelemetryDeploymentId",
            "[concat('Microsoft.Resources/deployments/',parameters('vmName'),if(equals(parameters('numberOfInstances'),1),'', copyindex(1)),'-ADE')]"
         ]
      }
   ]
}